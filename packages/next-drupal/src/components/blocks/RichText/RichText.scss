@counter-style decimal-bracketed-list {
  system: extends decimal;
  suffix: ') ';
  prefix: '(';
}

@counter-style lower-latin-bracketed-list {
  system: extends lower-latin;
  suffix: ') ';
  prefix: '(';
}

@counter-style lower-roman-bracketed-list {
  system: extends lower-roman;
  suffix: ') ';
  prefix: '(';
}

.rich-text-content {
  --ol-pl: 30px;
  --li-pl: 10px;

  ol {
    padding-left: var(--ol-pl);

    > li {
      padding-left: var(--li-pl);
    }

    p {
      display: inline-block;
      vertical-align: top;
      text-indent: 0;

      &:first-child {
        margin-top: 0;
      }
    }

    &[type='a'] {
      list-style-type: lower-latin;
    }

    &[type='i'] {
      list-style-type: lower-roman;
    }

    &.uppercase-list > li::marker {
      text-transform: uppercase !important;
    }

    /* @see https://caniuse.com/mdn-css_selectors_attribute_case_sensitive_modifier for future support of the following selectors */
    @supports selector([type='A' s]) {
      &[type='A' s],
      &[type='I' s] {
        > li::marker {
          text-transform: uppercase !important;
        }
      }
    }

    &.bracketed-list {
      &,
      &[type='1'] {
        list-style-type: decimal-bracketed-list !important;
      }

      &[type='a'] {
        list-style-type: lower-latin-bracketed-list !important;
      }

      &[type='i'] {
        list-style-type: lower-roman-bracketed-list !important;
      }
    }

    &,
    & > li,
    &[type='1'] > li,
    &[type='i'] > li {
      margin-block: 30px;
    }

    &[type='a'] > li {
      margin-block: 20px;
    }

    &[type='a'] + table,
    &[type='i'] + table,
    &[type='a'] + .table-responsive,
    &[type='i'] + .table-responsive {
      --ml: calc(var(--ol-pl) + var(--li-pl));
      --table-width: calc(100% - var(--ml));
      width: var(--table-width);

      &,
      & + p {
        margin-left: var(--ml);
      }
    }

    // @todo: these handle <p>s acting like table captions, will ideally
    // remove them from content
    table + p {
      display: block;
    }
  }

  /**
  * CKEditor Alignment classes for text and block level elements.
  */

  .text-align-left {
    text-align: left;
  }
  .text-align-right {
    text-align: right;
  }
  .text-align-center {
    text-align: center;
  }
  .text-align-justify {
    text-align: justify;
  }

  //
  // Basic Bootstrap table
  // @TODO: cleanup unused
  //

  $table-cell-padding-y: 0.5rem;
  $table-cell-padding-x: 0.5rem;
  $table-cell-padding-y-sm: 0.25rem;
  $table-cell-padding-x-sm: 0.25rem;

  $table-bg: transparent;
  $table-accent-bg: transparent;

  $table-border-width: 1px;
  $table-border-color: inherit;

  table,
  .table {
    --table-color: var(--deep-teal);
    --table-bg: #{$table-bg};
    --table-border-color: #{$table-border-color};
    width: 100%;
    margin-bottom: 20px;
    vertical-align: top;
    border-color: var(--table-border-color);
    border-collapse: collapse;

    tbody,
    td,
    tfoot,
    th,
    thead,
    tr {
      border-color: inherit;
      border-style: solid;
      border-width: 0;
    }

    th {
      text-align: start;

      p {
        font-weight: inherit;
      }
    }

    // Target th & td
    // We need the child combinator to prevent styles leaking to nested tables which doesn't have a `.table` class.
    // We use the universal selectors here to simplify the selector (else we would need 6 different selectors).
    // Another advantage is that this generates less code and makes the selector less specific making it easier to override.
    // stylelint-disable-next-line selector-max-universal
    > :not(caption) > * > * {
      padding: $table-cell-padding-y $table-cell-padding-x;
      // Following the precept of cascades: https://codepen.io/miriamsuzanne/full/vYNgodb
      color: var(
        --table-color-state,
        var(--table-color-type, var(--table-color))
      );
      background-color: var(--table-bg);
      border-bottom-width: $table-border-width;
      box-shadow: inset 0 0 0 9999px
        var(--table-bg-state, var(--table-bg-type, var(--table-accent-bg)));
    }

    > tbody {
      vertical-align: inherit;
    }

    > thead {
      vertical-align: bottom;
    }

    > :not(caption) > * {
      border-width: $table-border-width 0;

      > * {
        border-width: $table-border-width;

        p {
          color: inherit;
          font-size: inherit;
          font-weight: inherit;

          &:first-child {
            margin-block-start: 0;
          }

          &:last-child {
            margin-block-end: 0;
          }
        }
      }
    }
  }
}
